// „Éá„Éº„Çø„Éô„Éº„ÇπÂÜÖÂÆπÁ¢∫Ë™ç„Çπ„ÇØ„É™„Éó„Éà

const BASE_URL = 'http://localhost:3000';

async function checkDatabase() {
  console.log('üìä „Éá„Éº„Çø„Éô„Éº„ÇπÂÜÖÂÆπ„ÇíÁ¢∫Ë™ç‰∏≠...\n');
  
  try {
    // Áõ¥Êé•Supabase„Åã„ÇâÂÖ®„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„ÇãAPI„Çí‰ΩúÊàê
    const response = await fetch(`${BASE_URL}/api/test/check-env`, {
      method: 'GET'
    });
    
    if (!response.ok) {
      console.log('Êó¢Â≠ò„ÅÆAPI„Çí‰ΩøÁî®...\n');
    }

    // GPTs„Ç≥„É≥„ÉÜ„É≥„ÉÑAPI„ÇíÁ¢∫Ë™ç
    console.log('=== GPTsÈÄ£Êê∫„Ç≥„É≥„ÉÜ„É≥„ÉÑAPI ===');
    const gptsResponse = await fetch(`${BASE_URL}/api/gpts/contents`);
    const gptsData = await gptsResponse.json();
    
    console.log(`Á∑èÊï∞: ${gptsData.total}`);
    console.log('\n„Ç≥„É≥„ÉÜ„É≥„ÉÑË©≥Á¥∞:');
    (gptsData.contents || []).forEach((content, index) => {
      console.log(`\n[${index + 1}] ID: ${content.id}`);
      console.log(`    Platform: ${content.platform}`);
      console.log(`    Status: ${content.status}`);
      console.log(`    Source: ${content.metadata?.source}`);
      console.log(`    Created: ${content.created_at}`);
      console.log(`    Content: ${(content.content || '').substring(0, 50)}...`);
    });
    
    console.log('\n\n=== „Çπ„Ç±„Ç∏„É•„Éº„É´ÊäïÁ®øÁÆ°ÁêÜAPI ===');
    const scheduleResponse = await fetch(`${BASE_URL}/api/scheduled-posts`);
    const scheduleData = await scheduleResponse.json();
    
    console.log(`Á∑èÊï∞: ${scheduleData.length}`);
    console.log('\nÊäïÁ®øË©≥Á¥∞:');
    (scheduleData || []).forEach((post, index) => {
      console.log(`\n[${index + 1}] ID: ${post.id}`);
      console.log(`    Platform: ${post.platform}`);
      console.log(`    Status: ${post.status}`);
      console.log(`    Source: ${post.metadata?.source}`);
      console.log(`    Created: ${post.created_at}`);
      console.log(`    Content: ${(post.content || '').substring(0, 50)}...`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
}

// ÂÆüË°å
checkDatabase();